{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/efraim-andrade/Projects/Goomer/wpm-go/src/components/Main/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport * as S from \"./styles\";\n\nvar Main = function Main(_ref) {\n  _s();\n\n  var _ref$title = _ref.title,\n      title = _ref$title === void 0 ? \"WPM GOOOOO\" : _ref$title;\n\n  var _useState = useState(60),\n      count = _useState[0],\n      setCount = _useState[1];\n\n  var _useState2 = useState(false),\n      playing = _useState2[0],\n      setPlaying = _useState2[1];\n\n  var _useState3 = useState([\"Arrow\", \"Tomato\", \"Star\", \"Wheel\"]),\n      words = _useState3[0],\n      setWords = _useState3[1];\n\n  useEffect(function () {\n    if (playing) {\n      var countdown = setInterval(function () {\n        setCount(function (count) {\n          return count > 0 ? count - 1 : 60;\n        });\n      }, 1000);\n      return function () {\n        clearInterval(countdown);\n      };\n    }\n  }, [playing]);\n\n  var shuffleArray = function shuffleArray(arr) {\n    return arr.map(function (a) {\n      return [Math.random(), a];\n    }).sort().map(function (a) {\n      return a[1];\n    });\n  };\n\n  var shuffledArray = useCallback(function () {\n    return shuffleArray(words);\n  }, [shuffleArray, words]);\n  return __jsx(S.Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(S.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"CONTAGEM REGRESSIVA: \", count), __jsx(S.TextBox, {\n    type: \"text\",\n    onFocus: function onFocus() {\n      return setPlaying(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), shuffledArray().map(function (word) {\n    return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, word);\n  }));\n};\n\n_s(Main, \"4VZy9t5CIEDTzMviSmy0cmjaPLA=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/efraim-andrade/Projects/Goomer/wpm-go/src/components/Main/index.tsx"],"names":["React","useEffect","useState","useCallback","S","Main","title","count","setCount","playing","setPlaying","words","setWords","countdown","setInterval","clearInterval","shuffleArray","arr","map","a","Math","random","sort","shuffledArray","word"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;AAEA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAA8B;AAAA;;AAAA,wBAA3BC,KAA2B;AAAA,MAA3BA,KAA2B,2BAAnB,YAAmB;;AAAA,kBACfJ,QAAQ,CAAC,EAAD,CADO;AAAA,MAClCK,KADkC;AAAA,MAC3BC,QAD2B;;AAAA,mBAEXN,QAAQ,CAAC,KAAD,CAFG;AAAA,MAElCO,OAFkC;AAAA,MAEzBC,UAFyB;;AAAA,mBAGfR,QAAQ,CAAC,CAAC,OAAD,EAAU,QAAV,EAAoB,MAApB,EAA4B,OAA5B,CAAD,CAHO;AAAA,MAGlCS,KAHkC;AAAA,MAG3BC,QAH2B;;AAKzCX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIQ,OAAJ,EAAa;AACX,UAAMI,SAAS,GAAGC,WAAW,CAAC,YAAM;AAClCN,QAAAA,QAAQ,CAAC,UAACD,KAAD;AAAA,iBAAYA,KAAK,GAAG,CAAR,GAAYA,KAAK,GAAG,CAApB,GAAwB,EAApC;AAAA,SAAD,CAAR;AACD,OAF4B,EAE1B,IAF0B,CAA7B;AAIA,aAAO,YAAM;AACXQ,QAAAA,aAAa,CAACF,SAAD,CAAb;AACD,OAFD;AAGD;AACF,GAVQ,EAUN,CAACJ,OAAD,CAVM,CAAT;;AAYA,MAAMO,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD;AAAA,WACnBA,GAAG,CACAC,GADH,CACO,UAACC,CAAD;AAAA,aAAO,CAACC,IAAI,CAACC,MAAL,EAAD,EAAgBF,CAAhB,CAAP;AAAA,KADP,EAEGG,IAFH,GAGGJ,GAHH,CAGO,UAACC,CAAD;AAAA,aAAOA,CAAC,CAAC,CAAD,CAAR;AAAA,KAHP,CADmB;AAAA,GAArB;;AAMA,MAAMI,aAAa,GAAGpB,WAAW,CAAC,YAAM;AACtC,WAAOa,YAAY,CAACL,KAAD,CAAnB;AACD,GAFgC,EAE9B,CAACK,YAAD,EAAeL,KAAf,CAF8B,CAAjC;AAIA,SACE,MAAC,CAAD,CAAG,SAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,CAAD,CAAG,KAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA+BJ,KAA/B,CADF,EAGE,MAAC,CAAD,CAAG,OAAH;AAAW,IAAA,IAAI,EAAC,MAAhB;AAAuB,IAAA,OAAO,EAAE;AAAA,aAAMG,UAAU,CAAC,IAAD,CAAhB;AAAA,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAKGa,aAAa,GAAGL,GAAhB,CAAoB,UAACM,IAAD;AAAA,WACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,IAAJ,CADmB;AAAA,GAApB,CALH,CADF;AAWD,CAtCD;;GAAMnB,I;;KAAAA,I;AAwCN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\n\nimport * as S from \"./styles\";\n\nconst Main = ({ title = \"WPM GOOOOO\" }) => {\n  const [count, setCount] = useState(60);\n  const [playing, setPlaying] = useState(false);\n  const [words, setWords] = useState([\"Arrow\", \"Tomato\", \"Star\", \"Wheel\"]);\n\n  useEffect(() => {\n    if (playing) {\n      const countdown = setInterval(() => {\n        setCount((count) => (count > 0 ? count - 1 : 60));\n      }, 1000);\n\n      return () => {\n        clearInterval(countdown);\n      };\n    }\n  }, [playing]);\n\n  const shuffleArray = (arr: Array<string>) =>\n    arr\n      .map((a) => [Math.random(), a])\n      .sort()\n      .map((a) => a[1]);\n\n  const shuffledArray = useCallback(() => {\n    return shuffleArray(words);\n  }, [shuffleArray, words]);\n\n  return (\n    <S.Container>\n      <S.Title>CONTAGEM REGRESSIVA: {count}</S.Title>\n\n      <S.TextBox type=\"text\" onFocus={() => setPlaying(true)} />\n\n      {shuffledArray().map((word) => (\n        <p>{word}</p>\n      ))}\n    </S.Container>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}